on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Alpine version'
        required: true
        default: 'v3.20'
      tag:
        description: 'Git Release Tag'
        required: true
        default: 'v1.0.0'

jobs:
  build_ISOs:
    runs-on: ubuntu-24.04
    container:
      image: alpine:3.20

    steps:
      - name: Install software
        run: |
          apk update
          apk upgrade
          apk --no-cache add alpine-sdk build-base apk-tools alpine-conf \
              busybox fakeroot syslinux xorriso squashfs-tools sudo mtools \
              dosfstools grub-efi

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prevent duplicate tag creation
        run: |
          if git tag | grep -q "${{ github.event.inputs.tag }}"; then
            echo "Tag already exists. Stopping workflow."
            exit 1
          fi

      - name: Create a new tag
        run: |
          git tag -a "${{ github.event.inputs.tag }}" -m "Tag for Release ${{ github.event.inputs.tag }}"
          git push origin "${{ github.event.inputs.tag }}"

      - name: Download aports
        run: git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git

      - name: Configure build keys
        run: echo | abuild-keygen -i -a

      - name: Make ISO (${{ github.event.inputs.version }})
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }} 
        run: |
          chmod +x *.sh
          mv *.sh aports/scripts/
          cd aports/scripts/

          ./mkimage.sh \
              --tag ${{ github.event.inputs.version }} \
              --arch x86_64 \
              --profile docker \
              --outdir ../../ \
              --repository https://dl-cdn.alpinelinux.org/alpine/${{ github.event.inputs.version }}/main \
              --repository https://dl-cdn.alpinelinux.org/alpine/${{ github.event.inputs.version }}/community

      - name: Upload files
        uses: actions/upload-artifact@v4
        with:
          name: files
          path: .
          include-hidden-files: true

  release_ISOs:
    runs-on: ubuntu-24.04
    needs: build_ISOs
    steps:
      - name: Download files
        uses: actions/download-artifact@v4
        with:
          name: files

      - name: Release AlpDock ISO
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo -e "Changelog\n---------" > changelog.txt
          git log --reverse --pretty=format:"%h %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> changelog.txt

          gh release create {{ github.event.inputs.tag }} \
            --verify-tag \
            --latest \
            --draft \
            --notes-file changelog.txt \
            *.iso
